@page "/"

@using BlazorApp.Components
@using Widerpaper

<div class="container">
    <div>
        <h1 style="font-size: 41px;" class="text-center"><strong>Widerpaper</strong> <span style="font-weight: lighter">Redux</span></h1>
        <p class="text-center">
            <small>
                Made with ❤️ by
                <a class="icon-link" href="https://github.com/BuenoVini" target="_blank">
                    Vini Bueno
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 2048 2048"><path fill="currentColor" d="M1024 25q141 0 272 36t244 104t207 160t161 207t103 245t37 272q0 165-50 318t-143 281t-221 224t-286 149q-3 1-9 1t-9 1q-24 0-38-14t-14-37v-140q0-69 1-141q0-51-15-103t-54-87q116-13 203-47t146-96t88-150t30-212q0-78-26-147t-79-128q11-28 16-58t5-60q0-39-8-77t-23-76q-5-2-11-2t-11 0q-32 0-67 10t-69 26t-67 35t-57 36q-125-35-256-35t-256 35q-25-17-57-36t-66-34t-70-26t-67-11h-11q-6 0-11 2q-14 37-22 75t-9 78q0 30 5 60t16 58q-53 58-79 127t-26 148q0 122 29 211t88 150t146 97t203 48q-29 26-44 62t-21 75q-27 13-57 20t-60 7q-64 0-106-30t-75-82q-12-19-29-38t-37-34t-43-24t-48-10h-12q-8 0-15 3t-14 6t-6 10q0 12 14 23t23 18l3 2q22 17 38 32t30 33t23 38t23 47q34 78 95 113t147 36q26 0 52-3t52-9v174q0 24-14 38t-39 14h-8q-5 0-9-2q-157-51-286-147t-221-225t-142-282t-51-318q0-141 36-272t104-244t160-207t207-161T752 62t272-37z" /></svg>
                </a>
            </small>
        </p>
    </div>

    <div class="row my-4">
        <h4>
            <label for="inputImage" class="form-label">
                Step 1: Choose an image
            </label>
        </h4>
        <InputFile OnChange="OnSelectImageAsync" class="form-control" id="inputImage" disabled="@_isProcessingImage" />
    </div>

    <hr />

    <div class="row my-4">
        <h4>
            <label for="selectAlgorithm" class="form-label">
                Step 2: Choose an algorithm
            </label>
        </h4>
        <select id="selectAlgorithm" @onchange="OnChangeAlgorithm" class="form-select" aria-label="Select an algorithm" disabled="@_isProcessingImage">
            <option selected value="0">Simple Mirror</option>
            <option value="1">Mirror with Blur</option>
        </select>
        <div class="alert alert-dark" role="alert">
            @switch (_algorithmChosen)
            {
                case Algorithm.SimpleMirror:
                    <p>This algorithm mirrors the left and right side of the image until it reaches the Ultrawide aspect ratio (21:9).</p>
                    <hr />
                    <p><strong>Use this when:</strong> you have an image with solid background color or repeating pattern.</p>
                    break;

                case Algorithm.BlurMirror:
                    <p>This algorithm mirrors the left and right side of the image until it reaches the Ultrawide aspect ratio (21:9). The mirrored area is then blurred with Gaussian Blur.</p>
                    <hr />
                    <label for="blurStrenght" class="form-label"><b>Blur Strenght:</b> @(_blurStrenght * 2)%</label>
                    <input @oninput="OnChangeBlurStrenght" type="range" class="form-range" id="blurStrenght" value=@_blurStrenght min="5" max="50" step="5" disabled="@_isProcessingImage">
                    <div class="form-check form-switch mt-3">
                        <input @onchange="OnChangeBlurTransition" class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheck" disabled="@_isProcessingImage">
                        <label class="form-check-label" for="flexSwitchCheck">Apply blur transition?</label>
                    </div>
                    <hr />
                    <p><strong>Use this when:</strong> the image background is not even or you start seeing too many repeating pattern from the Simple Mirror algorithm.</p>
                    break;

                default:
                    <p>Some error happened... Try again!</p>
                    break;
            }
        </div>
    </div>

    <hr />

    <div class="row my-4">
        <h4>
            <label for="buttonProcessImage" class="form-label">
                Step 3: Generate Ultrawide image
            </label>
        </h4>
        <button @onclick="@ProcessImageAsync" id="buttonProcessImage" type="button" class="btn btn-primary" disabled="@_isProcessingImage">
            @if (!_isProcessingImage)
            {
                <span>Start processing</span>
            }
            else
            {
                <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
                <span role="status">Processing your image...</span>
            }
        </button>
    </div>

   @* <hr />

    <div class="row my-4">
        <h4>
            <label for="saveImage" class="form-label">
                Step 4: Save your image
            </label>
        </h4>
        <div id="saveImage" class="py-0 px-4 alert alert-light d-flex align-items-center position-relative" role="alert">
            <div class="col">
                <div class="row my-2">
                    <strong class="text-center">Your Ultrawide image is ready!</strong>
                </div>

                <div class="row my-2">
                    <div class="col d-grid gap-2">
                        <button @onclick="OpenWiderpaperImageFolderAsync" type="button" class="btn btn-outline-primary">Preview</button>
                    </div>
                    <div class="col d-grid gap-2">
                        <button type="button" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>*@

    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <Toast @ref="_toastFinishedProcessing" Title="Processing Finished" Body="Your Ultrawide image is ready!" />
    </div>
</div>

@code {
    private Toast _toastFinishedProcessing;

    private enum Algorithm { None = -1, SimpleMirror, BlurMirror }
    private Algorithm _algorithmChosen = Algorithm.SimpleMirror;

    //private string _inputFilePath; /* BUG in MAUI Blazor App when using LocalApplicationData. See: https://github.com/dotnet/runtime/issues/74884 */
    private string _inputFileName;
    private int _blurStrenght = 25;

    private bool _shouldBlurTransition = false;
    private bool _isProcessingImage = false;

    private string GetWiderpaperFolderPath(Environment.SpecialFolder specialFolder)
    {
        string folderPath = Path.Combine(Environment.GetFolderPath(specialFolder), "Widerpaper");

        if (!Directory.Exists(folderPath))
            Directory.CreateDirectory(folderPath);

        return folderPath;
    }

    private async Task OnSelectImageAsync(InputFileChangeEventArgs e)
    {
        _inputFileName = e.File.Name;
        string _inputFilePath;  // TODO: delete this line when BUG is fixed: https://github.com/dotnet/runtime/issues/74884
        _inputFilePath = Path.Combine(GetWiderpaperFolderPath(Environment.SpecialFolder.LocalApplicationData), "temp.jpg");

        await using FileStream stream = new(_inputFilePath, FileMode.Create);
        await e.File.OpenReadStream(10 * 1024 * 1024).CopyToAsync(stream);
    }

    private void OnChangeAlgorithm(ChangeEventArgs e)
    {
        int temp;
        if (!int.TryParse(e.Value.ToString(), out temp))
            temp = -1;

        _algorithmChosen = (Algorithm)temp;
    }

    private void OnChangeBlurStrenght(ChangeEventArgs e)
    {
        if (!int.TryParse(e.Value.ToString(), out _blurStrenght))
            _blurStrenght = 5;
    }

    private void OnChangeBlurTransition(ChangeEventArgs e)
    {
        if (!bool.TryParse(e.Value.ToString(), out _shouldBlurTransition))
            _shouldBlurTransition = false;
    }

    private async Task ProcessImageAsync()
    {
        _isProcessingImage = true;

        string _inputFilePath = Path.Combine(GetWiderpaperFolderPath(Environment.SpecialFolder.LocalApplicationData), "temp.jpg");  // TODO: delete this line when BUG is fixed: https://github.com/dotnet/runtime/issues/74884
        using WiderpaperImage imgInput = new(_inputFilePath);
        WiderpaperImage imgOutput;

        using (imgOutput = new())
        {
            switch (_algorithmChosen)
            {
                case Algorithm.SimpleMirror:
                    imgOutput = WiderpaperProcessing.ApplyMirror(imgInput);
                    break;

                case Algorithm.BlurMirror:
                    await Task.Run(() => imgOutput = _shouldBlurTransition ? WiderpaperProcessing.ApplyGradientBlurMirror(imgInput, _blurStrenght) : WiderpaperProcessing.ApplyBlurMirror(imgInput, _blurStrenght));
                    break;
            }
        }

        imgOutput.SaveImage(Path.Combine(GetWiderpaperFolderPath(Environment.SpecialFolder.MyPictures), "(21-9) " + _inputFileName));

        _isProcessingImage = false;

        await _toastFinishedProcessing.ShowToastAsync();
    }

    private async Task OpenWiderpaperImageFolderAsync() => await Launcher.Default.OpenAsync(GetWiderpaperFolderPath(Environment.SpecialFolder.MyPictures));
}